<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vacivida</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.min.js"
    integrity="sha512-fB746S+jyTdN2LSWbYSGP2amFYId226wpOeV4ApumcDpIttPxvk1ZPOgnwqwQziRAtZkiFJVx9F64GLAtoIlCQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <link rel="stylesheet" href="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.1.0/build/styles/stackoverflow-light.min.css">
  <script src="//cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.1.0/build/highlight.min.js"></script>

  <style>
  @keyframes surge-kf {
    0% {
      transform: translate(0%, -30%);
      opacity: 0;
    }
    100% {
      transform: translate(0%, 0%);
      opacity: 1;
    }
  }

  @keyframes shadow-kf {
    0% {
      box-shadow: 0px 0px 6px rgba(88, 153, 237, .7);
    }
    90% {
      box-shadow: 0px 0px 6px rgba(88, 153, 237, .7);
    }
    100% {
      box-shadow: 0px 0px 6px rgba(88, 153, 237, 0);
    }
  }

  @keyframes fade-out-kf {
    0% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  .accordion-surge {
    animation-name: surge-kf;
    animation-duration: 200ms;
    animation-timing-function: ease-in;
    animation-iteration-count: 1;
  }

  .accordion-shadow {
    animation-name: shadow-kf;
    animation-duration: 3000ms;
    animation-timing-function: linear;
    animation-iteration-count: 1;
  }

  .badge-fade-out {
    animation-name: fade-out-kf;
    animation-duration: 3000ms;
    animation-timing-function: linear;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
  }
  </style>
</head>

<body>
  <nav class="navbar navbar-light bg-light border-bottom">
    <div class="container-fluid">
      <a class="navbar-brand ms-auto me-auto" href="#">Vacivida</a>
    </div>
  </nav>

  <div class="container mt-4">
    <h4>Sincronizações</h4>

    <div id="sync-container" class="mb-5"></div>
  </div>

  <template id="item-template">
    <div class="accordion mt-2">
      <div class="accordion-item" data-component="accordion-item">
        <h2 class="accordion-header">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#"
            data-component="accordion-button"></button>
        </h2>
        <div id="" class="accordion-collapse collapse" data-component="collapse">
          <div class="accordion-body">
            <div class="d-flex align-items-start">
              <div class="nav flex-column nav-pills me-4" role="tablist">
                <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#" type="button" role="tab"
                  data-component="parsed-button">Parsed</button>
                <button class="nav-link" data-bs-toggle="pill" data-bs-target="#" type="button" role="tab"
                  data-component="json-button">JSON</button>
              </div>
              <div class="tab-content">
                <div class="tab-pane fade show active" id="" role="tabpanel" data-component="parsed-content"></div>
                <div class="tab-pane fade" id="" role="tabpanel" data-component="json-content">
                  <pre data-component="json-pre" class="p-3 rounded-2"><code class="language-json"></code></pre>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </template>

  <template id="title-template">
    <span>
      <span class="badge bg-primary badge-fade-out d-none">Novo</span> <span data-component="text"></span>
    </span>
  </template>

  <template id="row-template">
    <tr>
      <td data-component="key"></td>
      <td data-component="value"></td>
    </tr>
  </template>

  <template id="table-template">
    <table class="table table-striped table-hover">
      <thead>
        <tr>
          <th scope="col">chave</th>
          <th scope="col">valor</th>
        </tr>
      </thead>
      <tbody data-component="body">
      </tbody>
    </table>
  </template>


  <script>
    var initialData = <%- JSON.stringify(data) %>;
  </script>

  <script>
    function getComponent(doc, name) {
      return doc.querySelector('[data-component="' + name + '"]')
    }

    function getTemplate(name) {
      return document.getElementById(name).content.firstElementChild.cloneNode(true)
    }

    function getTitleElement(title, isNew=false) {
      const t = getTemplate('title-template')
      getComponent(t, 'text').textContent = title
      if (isNew) {
        t.firstElementChild.classList.remove('d-none')
        setTimeout(() => {
          t.firstElementChild.classList.add('d-none')
        }, 3200)
      }
      return t
    }

    function insert(data, isNew=false) {
      const itemClone = getTemplate('item-template')
      const tableClone = getTemplate('table-template')

      // const $accordion = getComponent(itemClone, 'accordion')
      const $accordionItem = getComponent(itemClone, 'accordion-item')
      const $accordionButton = getComponent(itemClone, 'accordion-button')
      const $collapse = getComponent(itemClone, 'collapse')
      const $parsedButton = getComponent(itemClone, 'parsed-button')
      const $jsonButton = getComponent(itemClone, 'json-button')
      const $parsedContent = getComponent(itemClone, 'parsed-content')
      const $jsonContent = getComponent(itemClone, 'json-content')
      const $jsonPre = getComponent(itemClone, 'json-pre')

      $accordionButton.appendChild(getTitleElement(data.id, isNew))
      $accordionButton.setAttribute('data-bs-target', '#collapse-' + data.id)
      $collapse.id = 'collapse-' + data.id
      $parsedButton.setAttribute('data-bs-target', '#parsed-' + data.id)
      $jsonButton.setAttribute('data-bs-target', '#json-' + data.id)
      $parsedContent.id = 'parsed-' + data.id
      $jsonContent.id = 'json-' + data.id
      $jsonPre.firstElementChild.textContent = JSON.stringify(data, undefined, 2)
      hljs.highlightElement($jsonPre)

      if (isNew) {
        itemClone.classList.add('accordion-surge')
        $accordionItem.classList.add('accordion-shadow')
      }

      for (const key in data) {
        const rowClone = getTemplate('row-template')
        getComponent(rowClone, 'key').textContent = key
        getComponent(rowClone, 'value').textContent = data[key]
        getComponent(tableClone, 'body').appendChild(rowClone)
      }

      $parsedContent.appendChild(tableClone)
      const container = document.getElementById('sync-container')
      container.insertBefore(itemClone, container.firstElementChild)
    }

    for (const i in initialData) {
      insert(initialData[i], false)
    }

    const socket = io('ws://localhost:3333')
    socket.on('new_form', data => {
      console.log(data)
      insert(data, true)
    })
  </script>
</body>

</html>
